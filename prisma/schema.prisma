generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  role      String   @default("member")
  createdAt DateTime @default(now())
  projects  Project[]
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  ownerId     Int
  createdAt   DateTime @default(now())
  owner       User     @relation(fields: [ownerId], references: [id])
  boards      Board[]
}

model Board {
  id        Int      @id @default(autoincrement())
  projectId Int
  name      String
  project   Project  @relation(fields: [projectId], references: [id])
  columns   Column[]
}

model Column {
  id      Int      @id @default(autoincrement())
  boardId Int
  name    String
  order   Int
  board   Board    @relation(fields: [boardId], references: [id])
  tasks   Task[]
}

model Task {
  id             Int      @id @default(autoincrement())
  columnId       Int
  title          String
  description    String
  status         String
  priority       String
  estimatePoints Int?
  assigneeId     Int?
  dueDate        DateTime?
  tags           String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  column         Column   @relation(fields: [columnId], references: [id])
  assignee       User?    @relation(fields: [assigneeId], references: [id])
  comments       Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  taskId    Int
  authorId  Int
  content   String
  createdAt DateTime @default(now())
  task      Task     @relation(fields: [taskId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])
}
